<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.server.mapper.EnergyMapper">
    <select id="getTrendOfWaterUse" parameterType="Map" resultType="Map">
        SELECT
            src02.tag_name,
            GROUP_CONCAT(src02.unit ORDER BY src02.unit) AS unit,
            GROUP_CONCAT(src02.value ORDER BY src02.unit) AS value
        FROM (SELECT
            SUBSTRING_INDEX (src01.tag_name, '.', 1) AS tag_name,
            DATE_FORMAT(src01.date_time, #{timeUnit}) AS unit,
            ROUND(IF(#{diff_flag}, SUM(src01.diff_value), AVG(src01.diff_value)), 2) AS value
            FROM (SELECT
            stvh.tag_name,
            stvh.date_time,
            IF(#{diff_flag}, (LEAD(stvh.value) OVER (PARTITION BY stvh.tag_name ORDER BY stvh.date_time) - stvh.value), stvh.value) AS diff_value
            FROM sdyy_tag_value_his stvh
            WHERE FIND_IN_SET(stvh.tag_name, #{tagList})
            AND DATE_FORMAT(stvh.date_time, '%Y-%m-%d') BETWEEN #{startTime} AND #{endTime}) src01
            WHERE src01.diff_value IS NOT NULL
            GROUP BY unit,
            src01.tag_name) src02
        GROUP BY src02.tag_name
    </select>
    <select id="getInstantaneousValueTrend" parameterType="Map" resultType="Map">
        SELECT
            SUBSTRING_INDEX (stvc.tag_name, '.', 1) AS tag_name,
            stvc.value
        FROM sdyy_tag_value_current stvc
        WHERE FIND_IN_SET(stvc.tag_name, #{tagList})
    </select>
    <select id="getDayMonthDiffValueOfTags" parameterType="Map" resultType="Map">
        SELECT
            SUBSTRING_INDEX (src01.tag_name, '.', 1) AS tag_name,
            ROUND(SUM(IF(src01.day_str = DATE_FORMAT(NOW(), '%Y-%m-%d'), src01.diff_time, 0)), 2) AS day_value,
            ROUND(SUM(IF(src01.month_str = DATE_FORMAT(NOW(), '%Y-%m'), src01.diff_time, 0)), 2) AS month_value,
            ROUND(SUM(src01.diff_time), 2) AS year_value
        FROM (SELECT
                  stvh.tag_name,
                  DATE_FORMAT(stvh.date_time, '%Y-%m-%d') AS day_str,
                  DATE_FORMAT(stvh.date_time, '%Y-%m') AS month_str,
                  (LEAD(stvh.value) OVER (PARTITION BY stvh.tag_name ORDER BY stvh.date_time) - stvh.value) AS diff_time,
                  stvh.value
              FROM sdyy_tag_value_his stvh
              WHERE FIND_IN_SET(stvh.tag_name, #{tagList})
                AND DATE_FORMAT(stvh.date_time, '%Y') = DATE_FORMAT(NOW(), '%Y')) src01
        WHERE src01.diff_time IS NOT NULL
        GROUP BY src01.tag_name
    </select>
    <select id="getDayMonthValueOfTags" parameterType="Map" resultType="Map">
        SELECT
            SUBSTRING_INDEX (src01.tag_name, '.', 1) AS tag_name,
            ROUND(AVG(IF(src01.day_str = DATE_FORMAT(NOW(), '%Y-%m-%d'), src01.value, NULL)), 2) AS day_value,
            ROUND(AVG(src01.value), 2) AS month_value
        FROM (SELECT
                  stvh.tag_name,
                  DATE_FORMAT(stvh.date_time, '%Y-%m-%d') AS day_str,
                  stvh.value
              FROM sdyy_tag_value_his stvh
              WHERE FIND_IN_SET(stvh.tag_name, #{tagList})
                AND DATE_FORMAT(stvh.date_time, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m')) src01
        WHERE src01.value IS NOT NULL
        GROUP BY src01.tag_name
        ORDER BY src01.tag_name
    </select>
    <select id="getTrendOfOneTag24Hour" parameterType="Map" resultType="Map">
        SELECT
            src01.day_str AS x,
            src01.diff_value AS y
        FROM (SELECT
                  stvh.tag_name,
                  DATE_FORMAT(stvh.date_time, '%Y-%m-%d %H') AS day_str,
                  IF(#{diff_flag}, (LEAD(stvh.value) OVER (PARTITION BY stvh.tag_name ORDER BY stvh.date_time) - stvh.value), stvh.value) AS diff_value,
                  stvh.value
              FROM sdyy_tag_value_his stvh
              WHERE FIND_IN_SET(stvh.tag_name, #{tag})) src01
        WHERE src01.day_str > DATE_SUB(now(), INTERVAL 24 HOUR)
          AND src01.diff_value IS NOT NULL
    </select>
    <select id="getTwoDayDiffRateOfOnTag" parameterType="Map" resultType="Map">
        SELECT
            src01.day_str AS x,
            SUM(src01.diff_value) AS y
        FROM (SELECT
                  stvh.tag_name,
                  DATE_FORMAT(stvh.date_time, '%Y-%m-%d') AS day_str,
                  (LEAD(stvh.value) OVER (PARTITION BY stvh.tag_name ORDER BY stvh.date_time) - stvh.value) AS diff_value,
                  stvh.value
              FROM sdyy_tag_value_his stvh
              WHERE FIND_IN_SET(stvh.tag_name, #{tag})) src01
        WHERE src01.day_str > DATE_SUB(now(), INTERVAL 2 DAY)
          AND src01.diff_value IS NOT NULL
        GROUP BY src01.day_str
        ORDER BY src01.day_str DESC
    </select>
    <select id="getRangeEnergyConsume" parameterType="Map" resultType="Map">
        SELECT
            SUBSTRING_INDEX (src01.tag_name, '.', 1) AS tag,
            ROUND(SUM(src01.diff_time), 2) AS value
        FROM (SELECT
            stvh.tag_name,
            stvh.date_time,
            (LEAD(stvh.value) OVER (PARTITION BY stvh.tag_name
            ORDER BY stvh.date_time) - stvh.value) AS diff_time
            FROM sdyy_tag_value_his stvh
            WHERE FIND_IN_SET(stvh.tag_name, #{tagList})
            AND DATE_FORMAT(stvh.date_time, '%Y-%m-%d') BETWEEN #{startTime} AND #{endTime}) src01
        WHERE src01.diff_time > 0
        GROUP BY src01.tag_name
    </select>
    <select id="getTagList" parameterType="Map" resultType="Map">
        SELECT
            *
        FROM sdyy_tag_def std
        WHERE IF(#{tag} = '', 1, std.tag_name = #{tag})
    </select>
    <insert id="insertTagDefBunch" parameterType="Map">
        REPLACE INTO sdyy_tag_def (tag_name, energy_name, energy_type, remark, source_minspan, source_maxspan, value_unit, source_name)
        VALUES (#{tag_name}, #{energy_name}, #{energy_type}, #{remark}, #{source_minspan}, #{source_maxspan}, #{value_unit}, #{source_name});
    </insert>
    <delete id="deleteTag" parameterType="Map">
        DELETE FROM sdyy_tag_def WHERE tag_name = #{tag_name}
    </delete>
</mapper>
